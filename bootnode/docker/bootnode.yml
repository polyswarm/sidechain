version: "3"
services:
    # nginx:
    #     restart: always
    #     image: nginx
    #     container_name: nginx
    #     ports:
    #         - "80:80"
    #         - "443:443"
    #     volumes:
    #         - "conf:/etc/nginx/conf.d"
    #         - "vhost:/etc/nginx/vhost.d"
    #         - "html:/usr/share/nginx/html"
    #         - "certs:/etc/nginx/certs:ro"
    # nginx-gen:
    #     restart: always
    #     image: jwilder/docker-gen
    #     container_name: nginx-gen
    #     volumes:
    #         - "/var/run/docker.sock:/tmp/docker.sock:ro"
    #         - "/root/nginx/nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro"
    #         - "conf:/etc/nginx/conf.d"
    #         - "vhost:/etc/nginx/vhost.d"
    #         - "html:/usr/share/nginx/html"
    #         - "certs:/etc/nginx/certs:ro"
    #     entrypoint: /usr/local/bin/docker-gen -notify-sighup nginx -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
    # letsencrypt-nginx-proxy-companion:
    #     restart: always
    #     image: jrcs/letsencrypt-nginx-proxy-companion
    #     container_name: letsencrypt-nginx-proxy-companion
    #     volumes:
    #         - "/var/run/docker.sock:/var/run/docker.sock:ro"
    #         - "conf:/etc/nginx/conf.d"
    #         - "vhost:/etc/nginx/vhost.d"
    #         - "html:/usr/share/nginx/html"
    #         - "certs:/etc/nginx/certs:rw"
    #     environment:
    #         - NGINX_DOCKER_GEN_CONTAINER=nginx-gen
    #         - NGINX_PROXY_CONTAINER=nginx
    bootnode:
        restart: always
        build:
            context: ./
            dockerfile: docker/Dockerfile
        image: polyswarm/bootnode
        container_name: bootnode
        ports:
            - "30301:30301/udp"
        command: ["bootnode",
            "-nodekey",
            "/nodekey",
            "-addr",
            "0.0.0.0:30301"
        ]